// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package user

import (
	"context"

	"mall/app/user/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	LoginRequest           = pb.LoginRequest
	LoginResponse          = pb.LoginResponse
	RegisterRequest        = pb.RegisterRequest
	RegisterResponse       = pb.RegisterResponse
	UserAddress            = pb.UserAddress
	UserAddressAddReq      = pb.UserAddressAddReq
	UserAddressAddResp     = pb.UserAddressAddResp
	UserAddressDelReq      = pb.UserAddressDelReq
	UserAddressDelResp     = pb.UserAddressDelResp
	UserAddressEditReq     = pb.UserAddressEditReq
	UserAddressEditResp    = pb.UserAddressEditResp
	UserAddressInfoReq     = pb.UserAddressInfoReq
	UserAddressListReq     = pb.UserAddressListReq
	UserAddressListResp    = pb.UserAddressListResp
	UserCollectionAddReq   = pb.UserCollectionAddReq
	UserCollectionAddResp  = pb.UserCollectionAddResp
	UserCollectionDelReq   = pb.UserCollectionDelReq
	UserCollectionDelResp  = pb.UserCollectionDelResp
	UserCollectionListReq  = pb.UserCollectionListReq
	UserCollectionListResp = pb.UserCollectionListResp
	UserInfo               = pb.UserInfo
	UserInfoRequest        = pb.UserInfoRequest
	UserInfoResponse       = pb.UserInfoResponse

	User interface {
		// 登录
		Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
		// 注册
		Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
		// 获取用户信息
		UserInfo(ctx context.Context, in *UserInfoRequest, opts ...grpc.CallOption) (*UserInfoResponse, error)
		// 添加收货地址
		AddUserAddress(ctx context.Context, in *UserAddressAddReq, opts ...grpc.CallOption) (*UserAddressAddResp, error)
		// 编辑收货地址
		EditUserAddress(ctx context.Context, in *UserAddressEditReq, opts ...grpc.CallOption) (*UserAddressEditResp, error)
		// 删除收货地址
		DelUserAddress(ctx context.Context, in *UserAddressDelReq, opts ...grpc.CallOption) (*UserAddressDelResp, error)
		// 获取收货地址列表
		GetUserAddressList(ctx context.Context, in *UserAddressListReq, opts ...grpc.CallOption) (*UserAddressListResp, error)
		// 添加收藏
		AddUserCollection(ctx context.Context, in *UserCollectionAddReq, opts ...grpc.CallOption) (*UserCollectionAddResp, error)
		// 删除收藏
		DelUserCollection(ctx context.Context, in *UserCollectionDelReq, opts ...grpc.CallOption) (*UserCollectionDelResp, error)
		// 收藏列表
		GetUserCollectionList(ctx context.Context, in *UserCollectionListReq, opts ...grpc.CallOption) (*UserCollectionListResp, error)
		// 根据主键id,查询收货地址
		GetUserAddressInfo(ctx context.Context, in *UserAddressInfoReq, opts ...grpc.CallOption) (*UserAddress, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

// 登录
func (m *defaultUser) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

// 注册
func (m *defaultUser) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

// 获取用户信息
func (m *defaultUser) UserInfo(ctx context.Context, in *UserInfoRequest, opts ...grpc.CallOption) (*UserInfoResponse, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.UserInfo(ctx, in, opts...)
}

// 添加收货地址
func (m *defaultUser) AddUserAddress(ctx context.Context, in *UserAddressAddReq, opts ...grpc.CallOption) (*UserAddressAddResp, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.AddUserAddress(ctx, in, opts...)
}

// 编辑收货地址
func (m *defaultUser) EditUserAddress(ctx context.Context, in *UserAddressEditReq, opts ...grpc.CallOption) (*UserAddressEditResp, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.EditUserAddress(ctx, in, opts...)
}

// 删除收货地址
func (m *defaultUser) DelUserAddress(ctx context.Context, in *UserAddressDelReq, opts ...grpc.CallOption) (*UserAddressDelResp, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.DelUserAddress(ctx, in, opts...)
}

// 获取收货地址列表
func (m *defaultUser) GetUserAddressList(ctx context.Context, in *UserAddressListReq, opts ...grpc.CallOption) (*UserAddressListResp, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.GetUserAddressList(ctx, in, opts...)
}

// 添加收藏
func (m *defaultUser) AddUserCollection(ctx context.Context, in *UserCollectionAddReq, opts ...grpc.CallOption) (*UserCollectionAddResp, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.AddUserCollection(ctx, in, opts...)
}

// 删除收藏
func (m *defaultUser) DelUserCollection(ctx context.Context, in *UserCollectionDelReq, opts ...grpc.CallOption) (*UserCollectionDelResp, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.DelUserCollection(ctx, in, opts...)
}

// 收藏列表
func (m *defaultUser) GetUserCollectionList(ctx context.Context, in *UserCollectionListReq, opts ...grpc.CallOption) (*UserCollectionListResp, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.GetUserCollectionList(ctx, in, opts...)
}

// 根据主键id,查询收货地址
func (m *defaultUser) GetUserAddressInfo(ctx context.Context, in *UserAddressInfoReq, opts ...grpc.CallOption) (*UserAddress, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.GetUserAddressInfo(ctx, in, opts...)
}
